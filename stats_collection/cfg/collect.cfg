# ---
# Define aliases/abbreviations for the search annotation keywords to
# keep subsequent text small.
# There is a set of keywords for "variable selection strategy"
# (what variable to select next during search) and a set for
# "domain splitting strategy": how to constrain the domain on the left
# branch of the binary decision tree, with its complement on right branch
# of the tree.
# See
# https://www.minizinc.org/doc-2.5.5/en/mzn_search.html
# for information about search annotations.
# ---

aliases:
   variable_selection_strategy:
      io       : input_order
      ff       : first_fail
      sm       : smallest
      lg       : largest
   domain_splitting_strategy:
      min      : indomain_min
      max      : indomain_max
      med      : indomain_median
      rand     : indomain_random
      split    : indomain_split
      revsplit : indomain_reverse_split

# ---
# The model files (maybe multiple ones)
# ---

modelfiles: 
   - prepare_modded.mzn

# ---
# Define how to process datafiles. This is a map where the key is
# the (unqualified) name of the data file and the value the name of
# a configuration, which defines how to process it. In turn, a
# configuration may define several strategies to be tested in turn.
# ---

datafiles:
   prepare1.dzn:  config_1
   prepare2.dzn:  config_1
   prepare3.dzn:  config_1
   prepare4.dzn:  config_1
   prepare5.dzn:  config_1
   prepare6.dzn:  config_1
   prepare7.dzn:  config_1
   prepare8.dzn:  config_1
   prepare9.dzn:  config_1
   prepare10.dzn: config_1
   prepare11.dzn: config_1
   prepare12.dzn: config_1
   prepare13.dzn: config_1
   prepare14.dzn: config_1

# ---
# Configurations define how a given model + datafile combination 
# should be run by listing a number of strategies to apply.
#
# Under any given configuration alias (e.g. "config_1"), we find:
#
# - The configuration defaults (optional), of which there are:
#    - rounds: how often to run a model with a given strategy, which
#      is useful to collect statistics in the case "random selection"
#      strategies are applied. If missing, the default is 1. 
#      A rounds value of 0 means "don't run".
#    - limit_s: the time limit for running a model with a given
#      strategy, in seconds. If missing, the default is 0, which
#      means unlimited time.
#    - obj_name: the name of the objective value variable to
#      look for in the output
#
# - The annotation description (optional but you probably have an
#   annotation to set up). The annotation template contains 
#   placehodlers set by each strategy.
#
# - A number of strategies to try, which define the values for
#   the annotation placeholders and possibly overriding values
#   for the defaults.

configurations:
   config_1:
      defaults:
         rounds   : 1
         limit_s  : 30
         obj_name : makespan
      annotation:
         name     : s_annotation
         template : "int_search(s, $vss, $dss)"
      strategy_1:
         vss      : io
         dss      : min
      strategy_2:
         vss      : io
         dss      : split
      strategy_4:
         vss      : io
         dss      : rand
         rounds   : 4

